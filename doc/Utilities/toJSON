/**
   @function toJSON
   @param {Any} [x]
   @return {Any}
   @summary Converts a [::Dict], [::Set], [::List],
            [::Queue], [::Stack], or [::Record] to JSON
   @desc
     Most things are returned as-is, except [::Dict], [::Set],
     [::List], [::Queue], [::Stack], and [::Record] are
     converted into a specially-marked JSON object.

     This conversion takes `O(n)` time.

     This is useful because it's *lossless*: if you use
     [::toJSON] followed by [::fromJSON], the two objects
     will be equal:

         var x = Record({ foo: 1 });

         // true
         equal(x, fromJSON(toJSON(x)));

     This makes it possible to store Immutable objects on disk,
     or send them over the network with JSON, reconstructing
     them on the other side.

     If you just want to use a library that expects normal
     JavaScript objects, use [::toJS] and [::fromJS] instead.
 */
